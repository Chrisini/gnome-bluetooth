dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.52)

AC_INIT(gnome-bluetooth, 0.12.0)
AC_CONFIG_SRCDIR(src/controller.gob)

# Before making a release, the GNOMEBT_LT_VERSION string should be modified.
# The string is of the form C:R:A.
# - If interfaces have been changed or added, but binary compatibility has
#   been preserved, change to C+1:0:A+1
# - If binary compatibility has been broken (eg removed or changed interfaces)
#   change to C+1:0:0
# - If the interface is the same as the previous version, change to C:R+1:A
GNOMEBT_LT_VERSION=1:0:0
AC_SUBST(GNOMEBT_LT_VERSION)

AM_MAINTAINER_MODE
AC_CONFIG_HEADERS([config.h])

AM_INIT_AUTOMAKE([1.8 dist-bzip2 no-dist-gzip check-news])

dnl Initialize libtool
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

dnl Gettext stuff.
IT_PROG_INTLTOOL([0.35.0])

GETTEXT_PACKAGE=gnome-bluetooth
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"gnome-bluetooth", [Manage Bluetooth devices from the GNOME desktop.])

AM_GLIB_GNU_GETTEXT

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
AM_GCONF_SOURCE_2

GOB2_HOOK(2.0.0,[],[AC_MSG_ERROR([Cannot find GOB-2, install from http://www.5z.com/jirka/gob.html])])

BTCTL_REQUIRED=0.8.0
GCONF_REQUIRED=2.3.3

PKG_PROG_PKG_CONFIG

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal, no)
PKG_CHECK_MODULES(GNOME_BLUETOOTH, libglade-2.0 gobject-2.0 libgnomeui-2.0 >= 1.110.0 gconf-2.0 libbtctl >= $BTCTL_REQUIRED gconf-2.0 >= $GCONF_REQUIRED gtk+-2.0 >= 2.10)
PKG_CHECK_MODULES(GNOME_BLUETOOTH_PYTHON, libglade-2.0 gobject-2.0 libgnomeui-2.0 >= 1.110.0 gconf-2.0 pygtk-2.0 libbtctl >= $BTCTL_REQUIRED)
AM_CHECK_PYTHON_HEADERS(,[AC_MSG_ERROR(could not find Python headers)])

DEFSDIR=`pkg-config --variable=defsdir pygtk-2.0`
AC_SUBST(DEFSDIR)
CODEGENDIR=`pkg-config --variable codegendir pygtk-2.0`
AC_SUBST(CODEGENDIR)

AC_SUBST(GNOME_BLUETOOTH_CFLAGS)
AC_SUBST(GNOME_BLUETOOTH_LIBS)
AC_SUBST(GLIB_GENMARSHAL)
AC_SUBST(GNOME_BLUETOOTH_PYTHON_CFLAGS)
AC_SUBST(GNOME_BLUETOOTH_PYTHON_LIBS)

dnl ==========================================================================
dnl Turn on the additional warnings last, so -Werror doesn't affect other tests.
AC_ARG_ENABLE(compile-warnings,
[  --enable-compile-warnings  Maximum compiler warnings],
set_more_warnings="$enableval",[
if test -f $srcdir/CVSVERSION; then
    is_cvs_version=true
    set_more_warnings=yes
else
    set_more_warnings=no
fi
])
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
    AC_MSG_RESULT(yes)
    CFLAGS="\
    -Wall \
    -Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
    -Wnested-externs -Wpointer-arith \
    -Wcast-align -Wsign-compare \
    -Werror \
    $CFLAGS"

    for option in -Wsign-promo -Wno-sign-compare -Wno-strict-aliasing; do
        SAVE_CFLAGS="$CFLAGS"
        CFLAGS="$CFLAGS $option"
        AC_MSG_CHECKING([whether gcc understands $option])
        AC_TRY_COMPILE([], [],
            has_option=yes,
            has_option=no,)
        if test $has_option = no; then
            CFLAGS="$SAVE_CFLAGS"
        fi
        AC_MSG_RESULT($has_option)
        unset has_option
        unset SAVE_CFLAGS
    done
    unset option
else
    AC_MSG_RESULT(no)
fi

AC_CONFIG_FILES([
Makefile
gnome-bluetooth.pc
pixmaps/Makefile
src/Makefile
po/Makefile.in
])

AC_OUTPUT
